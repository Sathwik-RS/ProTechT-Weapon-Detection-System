import cv2
from ultralytics import YOLO
import datetime

# Load the YOLOv8 model
model = YOLO(r"C:\Users\rssat\OneDrive\Desktop\Gun_Detection_Software\gun-detection\best3.pt")

# Get class names (e.g., {0: 'gun'})
class_names = model.names
gun_class_ids = [i for i, name in class_names.items() if "gun" in name.lower()]

if not gun_class_ids:
    raise ValueError("‚ùå Your model does not include 'gun' in its class names!")

# Start webcam
cap = cv2.VideoCapture(0)
frame_count = 0

# Track IDs of detected guns
tracked_gun_ids = set()

gun_detected = False  # Flag to stop after detection

while True:
    ret, frame = cap.read()
    if not ret:
        break

    frame_count += 1
    if frame_count % 2 != 0:
        continue

    results = model.track(frame, conf=0.5, iou=0.4, persist=True)

    if results[0].boxes is None:
        continue

    boxes = results[0].boxes.xyxy.cpu().numpy()
    class_ids = results[0].boxes.cls.cpu().numpy()
    confs = results[0].boxes.conf.cpu().numpy()
    ids = results[0].boxes.id

    if ids is None:
        ids = [None] * len(boxes)
    else:
        ids = ids.cpu().numpy()

    for box, class_id, conf, obj_id in zip(boxes, class_ids, confs, ids):
        class_id = int(class_id)
        if class_id not in gun_class_ids:
            continue
        if obj_id is not None:
            tracked_gun_ids.add(int(obj_id))

            # Take screenshot only once when a gun is detected
            if not gun_detected:
                timestamp = datetime.datetime.now().strftime("%Y%m%d_%H%M%S")
                screenshot_filename = f"gun_detected_{timestamp}.jpg"
                cv2.imwrite(screenshot_filename, frame)
                print(f"üì∏ Screenshot saved as: {screenshot_filename}")
                print("üö® Gun Detected! Calling Police!")
                gun_detected = True
                break  # Exit loop immediately after detection

    if gun_detected:
        break

    # Draw boxes for tracked guns (optional visualization)
    for box, class_id, obj_id in zip(boxes, class_ids, ids):
        if obj_id is None or int(obj_id) not in tracked_gun_ids:
            continue

        x1, y1, x2, y2 = map(int, box)
        gun_id = int(obj_id)
        label = f"Gun #{gun_id}"

        cv2.rectangle(frame, (x1, y1), (x2, y2), (0, 0, 255), 2)
        cv2.putText(frame, label, (x1, y1 - 10),
                    cv2.FONT_HERSHEY_SIMPLEX, 0.6, (0, 255, 0), 2)

    # Show frame (optional)
    cv2.imshow("Gun Detection", frame)
    if cv2.waitKey(1) & 0xFF == 27:  # ESC
        break

cap.release()
cv2.destroyAllWindows()
